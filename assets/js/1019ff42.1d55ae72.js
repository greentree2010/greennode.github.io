"use strict";(self.webpackChunkhakehardware=self.webpackChunkhakehardware||[]).push([[604],{789:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var o=r(4848),s=r(8453);const i={},t="Vana PoS Network Validator Setup",d={id:"guides/node/vana/vana-pos-validator-setup",title:"Vana PoS Network Validator Setup",description:"This guide will walk you through setting up a validator node for the Vana Proof-of-Stake (PoS) network using Docker.",source:"@site/docs/guides/node/vana/vana-pos-validator-setup.md",sourceDirName:"guides/node/vana",slug:"/guides/node/vana/vana-pos-validator-setup",permalink:"/docs/guides/node/vana/vana-pos-validator-setup",draft:!1,unlisted:!1,editUrl:"https://github.com/greentree2010/greentree2010.github.io/edit/main/docs/guides/node/vana/vana-pos-validator-setup.md",tags:[],version:"current",frontMatter:{},sidebar:"guides",previous:{title:"Vana DLP Setup Guide",permalink:"/docs/guides/node/vana/vana-node-setup"},next:{title:"Minato Node Setup Guide",permalink:"/docs/guides/node/soneium/"}},a={},c=[{value:"This guide will walk you through setting up a validator node for the Vana Proof-of-Stake (PoS) network using Docker.",id:"this-guide-will-walk-you-through-setting-up-a-validator-node-for-the-vana-proof-of-stake-pos-network-using-docker",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install Docker &amp; Docker Compose",id:"install-docker--docker-compose",level:3},{value:"Install Docker Compose",id:"install-docker-compose",level:3},{value:"Testnet Requirements",id:"testnet-requirements",level:2},{value:"Minimum Hardware Specifications:",id:"minimum-hardware-specifications",level:3},{value:"Quick Start",id:"quick-start",level:3}];function l(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"vana-pos-network-validator-setup",children:"Vana PoS Network Validator Setup"})}),"\n",(0,o.jsx)(n.h2,{id:"this-guide-will-walk-you-through-setting-up-a-validator-node-for-the-vana-proof-of-stake-pos-network-using-docker",children:"This guide will walk you through setting up a validator node for the Vana Proof-of-Stake (PoS) network using Docker."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"\u26a0\ufe0f Warning:"})," Please run the validator only after conducting your own research and at your own risk. To activate the validator, you may need to be whitelisted, which requires staking 35,000 $VANA."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(n.h3,{id:"install-docker--docker-compose",children:"Install Docker & Docker Compose"}),"\n",(0,o.jsx)(n.p,{children:"Run the following commands to install Docker on your Ubuntu system:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\necho "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update && sudo apt-get install -y docker-ce docker-ce-cli containerd.io\nsudo systemctl start docker && sudo systemctl enable docker\nsudo docker --version\n'})}),"\n",(0,o.jsx)(n.h3,{id:"install-docker-compose",children:"Install Docker Compose"}),"\n",(0,o.jsx)(n.p,{children:"Run this command to install Docker Compose:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\ndocker-compose --version\n'})}),"\n",(0,o.jsx)(n.h2,{id:"testnet-requirements",children:"Testnet Requirements"}),"\n",(0,o.jsx)(n.h3,{id:"minimum-hardware-specifications",children:"Minimum Hardware Specifications:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"CPU"}),": 2-core"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"RAM"}),": 8 GB"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Storage"}),": 100 GB high-speed SSD"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Architecture"}),": x86-64"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Ensure that your machine meets the above requirements for optimal performance on the testnet."}),"\n",(0,o.jsx)(n.h3,{id:"quick-start",children:"Quick Start"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"1. Clone the Vana Repository:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"git clone https://github.com/vana-com/vana.git\ncd vana\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"2. Configure the Environment"})}),"\n",(0,o.jsx)(n.p,{children:"Copy the example environment file and modify it with your preferred configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cp .env.example .env\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Open the ",(0,o.jsx)(n.code,{children:".env"})," file using a text editor:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"nano .env\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Set the ",(0,o.jsx)(n.code,{children:"EXTERNAL_IP"}),"=",(0,o.jsx)(n.code,{children:"{Your-VPS-IP}"})]}),"\n",(0,o.jsxs)(n.li,{children:["Set ",(0,o.jsx)(n.code,{children:"USE_VALIDATOR=true"})," to run a validator node."]}),"\n",(0,o.jsxs)(n.li,{children:["Set the appropriate ",(0,o.jsx)(n.code,{children:"DEPOSIT_*"})," variables (e.g., RPC URL, contract address, and private key for deposits)."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"3. Generate Validator Keys"})}),"\n",(0,o.jsx)(n.p,{children:"This will guide you through an interactive process to generate the keys needed for your validator:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"docker compose --profile manual run --rm validator-keygen\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"\u26a0\ufe0f Important:"})," Carefully read the instructions and make sure to save your seed phrase/mnemonic for the validator wallet in a secure location!"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"4. Submit Validator Deposits"})}),"\n",(0,o.jsx)(n.p,{children:"After generating your validator keys, you need to submit the deposit for each validator to stake:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"docker compose --profile init --profile manual run --rm submit-deposits\n"})}),"\n",(0,o.jsx)(n.p,{children:"Wait for the transactions to be confirmed before proceeding."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"5. Start All Services"})}),"\n",(0,o.jsx)(n.p,{children:"Once your deposit is confirmed, start all the necessary services (including the validator):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"docker compose --profile init --profile validator up -d\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"6. Check Logs"})}),"\n",(0,o.jsx)(n.p,{children:"Monitor your logs to ensure everything is running smoothly:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"docker ps\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"docker logs --tail 50 -f {container-id}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"7. Troubleshooting"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["If the ",(0,o.jsx)(n.code,{children:"check-config"})," service fails, check its logs with:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"docker compose logs check-config\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Ensure all configuration files are correctly formatted, and ports are open in your firewall."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"8. Security Considerations"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Securely store your validator keys and ",(0,o.jsx)(n.strong,{children:"never"})," share them."]}),"\n",(0,o.jsx)(n.li,{children:"Regularly update your node software and monitor your validator's performance."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>d});var o=r(6540);const s={},i=o.createContext(s);function t(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);